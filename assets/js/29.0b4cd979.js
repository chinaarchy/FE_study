(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{378:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"css盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css盒模型"}},[t._v("#")]),t._v(" CSS盒模型")]),t._v(" "),a("h3",{attrs:{id:"标准模型、ie模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准模型、ie模型"}},[t._v("#")]),t._v(" 标准模型、IE模型")]),t._v(" "),a("p",[t._v("标准模型的宽高只包含content的宽高，IE盒模型还包含padding和border")]),t._v(" "),a("h3",{attrs:{id:"css如何设置这两种模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css如何设置这两种模型"}},[t._v("#")]),t._v(" CSS如何设置这两种模型")]),t._v(" "),a("p",[t._v("设置 "),a("code",[t._v("box-sizing")]),t._v(" 属性")]),t._v(" "),a("h3",{attrs:{id:"js如何获取盒模型对应的宽和高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js如何获取盒模型对应的宽和高"}},[t._v("#")]),t._v(" JS如何获取盒模型对应的宽和高")]),t._v(" "),a("p",[t._v("第一种不一定可以获取准确的数据，第二种是IE特有的api，第三种具有最好的效果，第四种获取四个角的坐标值，通过计算可以获得结果。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("dom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("height\ndom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE only")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("height\ndom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoundingClientRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得元素的绝对位置")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"盒模型的边距重叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型的边距重叠"}},[t._v("#")]),t._v(" 盒模型的边距重叠")]),t._v(" "),a("p",[t._v("如两个盒模型的margin重叠，边距不是两个相加，而是两个边距的最大值。")]),t._v(" "),a("h3",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("p",[t._v('W3C对BFC的定义如下： 浮动元素和绝对定位元素，非块级盒子的块级容器（例如 inline-blocks, table-cells, 和 table-captions），以及overflow值不为"visiable"的块级盒子，都会为他们的内容创建新的BFC（Block Fromatting Context， 即块级格式上下文）。')]),t._v(" "),a("h4",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("ol",[a("li",[t._v("防止浮动导致父元素高度塌陷")]),t._v(" "),a("li",[t._v("避免外边距重叠")])])])}),[],!1,null,null,null);s.default=e.exports}}]);