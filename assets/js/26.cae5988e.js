(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{374:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"模版编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模版编译原理"}},[t._v("#")]),t._v(" 模版编译原理")]),t._v(" "),a("p",[t._v("模版编译的工作是将模版进行编译，并通过渲染函数生成vnode。")]),t._v(" "),a("p",[t._v("大致流程为：")]),t._v(" "),a("ol",[a("li",[t._v("将模版解析成AST")]),t._v(" "),a("li",[t._v("遍历AST标记静态节点")]),t._v(" "),a("li",[t._v("使用AST生成渲染函数\n对应的模块分别为：")]),t._v(" "),a("li",[t._v("解析器")]),t._v(" "),a("li",[t._v("优化器")]),t._v(" "),a("li",[t._v("代码生成器")])]),t._v(" "),a("h3",{attrs:{id:"解析器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析器"}},[t._v("#")]),t._v(" 解析器")]),t._v(" "),a("p",[t._v("任务是将模版变为AST，其包含HTML解析器、文本解析器、过滤解析器。")]),t._v(" "),a("h4",{attrs:{id:"html解析器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html解析器"}},[t._v("#")]),t._v(" HTML解析器")]),t._v(" "),a("p",[t._v("HTML解析器是解析器部分最主要的部分。")]),t._v(" "),a("p",[t._v("在拿到模版字符串时，因为标签的层级关系，所以需要设计一个堆栈来存储当前的容器组件。\n要生成AST就要不断的分析模版文本要表达的意思，当识别到标签后，也就是一个新的元素插入进来，\n首先要识别"),a("code",[t._v("tag")]),t._v("、"),a("code",[t._v("attr")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("123"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("识别为三个部分即："),a("code",[t._v("div")]),t._v("、"),a("code",[t._v('id="test')]),t._v("、"),a("code",[t._v(">")]),t._v("，其中最后的括号可以分辨标签是否是自闭合标签。")]),t._v(" "),a("p",[t._v("同时在识别到不同信息后，会调用对应的钩子函数进行处理。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseHtml")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attrs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析到标签开始部分，触发该函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析到标签结束，触发该函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chars")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析到文本，触发该函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("comment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析到注释触发该函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("关于一个部分是否为标签的识别就是判断是否为"),a("code",[t._v("<")]),t._v("开始，若不是就为文本节点或者注释节点。\n同时在循环结束时，如果堆栈剩下的标签信息与解析的信息不同的话，也就可以发现存在标签问题。")]),t._v(" "),a("h4",{attrs:{id:"文本解析器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本解析器"}},[t._v("#")]),t._v(" 文本解析器")]),t._v(" "),a("p",[t._v("上面的部分只是处理了文本和标签直接的区别，但是文本中还有变量或者表达式等信息的存在。\n所以还需要文本解析器对文本进行进一步的处理，将对应变量的值解析到AST上。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello {{name}}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"优化器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化器"}},[t._v("#")]),t._v(" 优化器")]),t._v(" "),a("p",[t._v("优化器的作用是标记出AST中的静态节点以提升运行效率。\n需要分别标记处静态节点以及静态跟节点。\n静态节点就是不断递归的过程，识别到其为静态元素后进行标记，若自元素为非静态节点，将其父元素标记为非静态元素。\n静态跟节点是基于以上的信息，第一个访问到的具有静态节点标记的元素，其自元素肯定也为静态元素，就完成了优化器的任务。")]),t._v(" "),a("h3",{attrs:{id:"生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成器"}},[t._v("#")]),t._v(" 生成器")]),t._v(" "),a("p",[t._v("经过以上的过程，已经得到了经过优化的AST，生成器就是根据其生成对应的渲染函数，以获得vnode。\n根据不同的节点标记类型，使用不同的构建函数完成计算。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("创建方法")]),t._v(" "),a("th",[t._v("别名")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("元素节点")]),t._v(" "),a("td",[t._v("creatElement")]),t._v(" "),a("td",[t._v("_c")])]),t._v(" "),a("tr",[a("td",[t._v("文本节点")]),t._v(" "),a("td",[t._v("creatTypeVNode")]),t._v(" "),a("td",[t._v("_v")])]),t._v(" "),a("tr",[a("td",[t._v("注释节点")]),t._v(" "),a("td",[t._v("creatEmptyVNode")]),t._v(" "),a("td",[t._v("_e")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);